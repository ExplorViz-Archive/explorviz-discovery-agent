apply from: 'https://raw.githubusercontent.com/ExplorViz/gradle-script-plugins/master/microservice.gradle'
apply plugin: 'com.github.spotbugs'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'com.github.johnrengelman.shadow'

buildscript {
  repositories {
    jcenter()	
      maven {
        url 'https://plugins.gradle.org/m2/'
      }
  }

  dependencies {
    classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.3"
    classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
  	
  }
}
dependencies {
   runtime files(org.gradle.internal.jvm.Jvm.current().toolsJar)
}
repositories {
  jcenter()
  maven { url 'https://jitpack.io' }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

ext {
  // Version tag for the Explorviz-Backend-Shared project dependency
  // https://github.com/ExplorViz/explorviz-backend-shared
  explorvizSharedVersion = 'v1.3.1'
}

dependencies {  
  // https://mvnrepository.com/artifact/org.json/json
  compile group: 'org.json', name: 'json', version: '20180813'


  // https://mvnrepository.com/artifact/org.jeasy/easy-rules-mvel
  compile group: 'org.jeasy', name: 'easy-rules-mvel', version: '3.3.0'


  // https://mvnrepository.com/artifact/org.jeasy/easy-rules
  compile group: 'org.jeasy', name: 'easy-rules-core', version: '3.3.0'


  // Common discovery files (e.g. model classes)
  implementation "com.github.explorviz.explorviz-backend-shared:discovery-common:${explorvizSharedVersion}"
  
  // Shared utility classes for ExplorViz, e.g., config injection
  implementation "com.github.explorviz.explorviz-backend-shared:config-injection:${explorvizSharedVersion}"
  
  // SSE context for injection
  implementation group: 'org.glassfish.jersey.media', name: 'jersey-media-sse', version: '2.27'

  // https://mvnrepository.com/artifact/org.jprocesses/jProcesses
 // compile group: 'org.jprocesses', name: 'jProcesses', version: '1.6.5'
  
 
  // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
  
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.4.0'
	testImplementation 'org.junit.platform:junit-platform-runner:1.4.0'
	testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.4.0'
	testImplementation 'org.mockito:mockito-core:2.24.0'	
	testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.27.0'

}

assemble.dependsOn shadowJar
jar.enabled = false

jar {
  manifest {
    attributes(
      'Main-Class': 'net.explorviz.discoveryagent.server.main.Main'
    )
  }
}

shadowJar {
  archiveName = "${project.name}.${extension}"
}

spotbugs {
  excludeFilter = file("conf/spotbugs-exclude-filter.xml")
  reportLevel = "low"
  effort = "max"
  ignoreFailures = true
  toolVersion = '3.1.7'
}

// Per default XML reports for SpotBugs are generated
// Include this to generate HTML reports
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    // Either HTML or XML reports can be activated
    html.enabled true
    xml.enabled false
  }
}

task spotbugs {
  group 'Quality Assurance'
  description 'Run SpotBugs'
  
  dependsOn 'spotbugsMain'
  dependsOn 'spotbugsTest'
}

pmd {
    ruleSets = []
    ruleSetFiles = files("conf/pmd.xml")
    ignoreFailures = true
    toolVersion = "6.7.0"
  }
	
  checkstyle {
    configDir = file("conf")
    configFile = file("conf/checkstyle.xml")
    maxWarnings = 0
    ignoreFailures = true
    toolVersion = "8.12"
  }	
	
  task checkstyle {
    group 'Quality Assurance'
    description 'Run Checkstyle'
    
    dependsOn 'checkstyleMain'
    dependsOn 'checkstyleTest'
  }
	
  task pmd {
    group 'Quality Assurance'
    description 'Run PMD'
    
    dependsOn 'pmdMain'
    dependsOn 'pmdTest'
  }